=== 参加人员 ===
王程程  黄文文  李婷婷  陶晓鸣  刘炯  霍琦  戎祥  何茂森  董飞  李洋

=== 第5章 软件构建中的设计（王程程 霍琦）===
====5.1-5.2（王程程）====
====5.3-5.5（霍琪）====
=== 第6章 可以工作的类（李洋 陶晓明）===
====6.1-6.3（李洋）====
====6.4-6.5（陶晓鸣）====
=== 第7章 高质量的子程序（刘炯 黄文文 董飞）===
====7.1-7.2（刘炯）====
====7.3-7.4（陶晓鸣）====
====7.5-7.7（董飞）====
====7.5 如何使用子程序参数====

====不要把子程序的参数用作工作变量====
*'''坏代码'''
<pre> 
int Sample (int inputVal){
      inputVal = inputVal * CurrentMultiplier ( inputVal );
      return inputVal;     //此处的inputVal已经不再是当初传入的值了
}
</pre>
*'''好代码'''
<pre>
int Sample (int inputVal){
      int workingVal = inputVal;  //引入新的变量workingVal，消除了误用inputVal的可能  
      workingVal = workingVal * CurrentMultiplier ( workingVal );
      ...           //在次处或者其他地方还可以使用inputVal最初传入的值
      return workingVal;
}
</pre>
====子程序的参数按照一定的规则命名====
  如果你觉得把输入，修改，输出参数区分开很重要的话，那么就建立一种命名规则来对他们进行区分。可以为这给这些参数的名字加上Input_，Modify_，或Output_来当前缀。
====在接口中对参数的假定进行注释说明====
  如果你假定了传递给子程序的参数具有某种特性，那么就要对这种假定加以说明。
  应该对这些接口参数的假定进行说明：
*'''参数要被仅用于输入的、要被修改的、还是仅用于输出的；'''
*'''表示数量的参数的单位（如：千米、米、厘米）；'''
*'''状态代码和错误值的含义；''' 
*'''所能接受的数值的范围'''
*'''不该出现的特定数值'''
=== 第8章 防御式编程（戎祥 何茂森 李婷婷）===
====8.1-8.3（戎祥）====
====8.4-8.5（李婷婷）====
====8.6-8.8（何茂森）====
